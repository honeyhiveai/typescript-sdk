/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of filter you are performing - "is", "is not", "contains", "not contains", "greater than"
 */
export enum Operator {
    Is = "is",
    IsNot = "is not",
    Contains = "contains",
    NotContains = "not contains",
    GreaterThan = "greater than",
}

/**
 * The data type you are using - "string", "number", "boolean", "id" (for object ids)
 */
export enum TypeT {
    String = "string",
    Number = "number",
    Boolean = "boolean",
    Id = "id",
}

export class EventFilter extends SpeakeasyBase {
    /**
     * The field name that you are filtering by like `metadata.cost`, `inputs.chat_history.0.content`
     */
    @SpeakeasyMetadata()
    @Expose({ name: "field" })
    field?: string;

    /**
     * The value that you are filtering the field for
     */
    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;

    /**
     * The type of filter you are performing - "is", "is not", "contains", "not contains", "greater than"
     */
    @SpeakeasyMetadata()
    @Expose({ name: "operator" })
    operator?: Operator;

    /**
     * The data type you are using - "string", "number", "boolean", "id" (for object ids)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: TypeT;
}
