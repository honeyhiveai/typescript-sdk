/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  EvaluationRun,
  EvaluationRun$inboundSchema,
  EvaluationRun$Outbound,
  EvaluationRun$outboundSchema,
} from "./evaluationrun.js";

export type GetRunResponse = {
  evaluation?: EvaluationRun | undefined;
};

/** @internal */
export const GetRunResponse$inboundSchema: z.ZodType<
  GetRunResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  evaluation: EvaluationRun$inboundSchema.optional(),
});

/** @internal */
export type GetRunResponse$Outbound = {
  evaluation?: EvaluationRun$Outbound | undefined;
};

/** @internal */
export const GetRunResponse$outboundSchema: z.ZodType<
  GetRunResponse$Outbound,
  z.ZodTypeDef,
  GetRunResponse
> = z.object({
  evaluation: EvaluationRun$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRunResponse$ {
  /** @deprecated use `GetRunResponse$inboundSchema` instead. */
  export const inboundSchema = GetRunResponse$inboundSchema;
  /** @deprecated use `GetRunResponse$outboundSchema` instead. */
  export const outboundSchema = GetRunResponse$outboundSchema;
  /** @deprecated use `GetRunResponse$Outbound` instead. */
  export type Outbound = GetRunResponse$Outbound;
}

export function getRunResponseToJSON(getRunResponse: GetRunResponse): string {
  return JSON.stringify(GetRunResponse$outboundSchema.parse(getRunResponse));
}

export function getRunResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetRunResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetRunResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetRunResponse' from JSON`,
  );
}
