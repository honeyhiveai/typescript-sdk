/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose } from "class-transformer";

export class ChatCompletionRequest extends SpeakeasyBase {
    /**
     * The project ID
     */
    @SpeakeasyMetadata()
    @Expose({ name: "project" })
    project: string;

    /**
     * The version of the chat
     */
    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;

    /**
     * The chat history
     */
    @SpeakeasyMetadata()
    @Expose({ name: "messages" })
    messages: Record<string, any>[];

    /**
     * The model to use
     */
    @SpeakeasyMetadata()
    @Expose({ name: "model" })
    model: string;

    /**
     * The provider
     */
    @SpeakeasyMetadata()
    @Expose({ name: "provider" })
    provider?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "hyperparameters" })
    hyperparameters?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "functions" })
    functions?: Record<string, any>[];

    /**
     * The function call method
     */
    @SpeakeasyMetadata()
    @Expose({ name: "function_call" })
    functionCall?: string;

    /**
     * The number of samples
     */
    @SpeakeasyMetadata()
    @Expose({ name: "num_samples" })
    numSamples?: number;

    /**
     * Whether to stream output
     */
    @SpeakeasyMetadata()
    @Expose({ name: "stream" })
    stream?: boolean;
}
