/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const UpdateRunRequestStatus = {
    Pending: "pending",
    Completed: "completed",
} as const;
export type UpdateRunRequestStatus = ClosedEnum<typeof UpdateRunRequestStatus>;

export type UpdateRunRequest = {
    /**
     * Additional sessions/events to associate with this run
     */
    eventIds?: Array<string> | undefined;
    /**
     * The UUID of the dataset this run is associated with
     */
    datasetId?: string | undefined;
    /**
     * Additional datapoints to associate with this run
     */
    datapointIds?: Array<string> | undefined;
    /**
     * The configuration being used for this run
     */
    configuration?: { [k: string]: any } | undefined;
    /**
     * Additional metadata for the run
     */
    metadata?: { [k: string]: any } | undefined;
    /**
     * The name of the run to be displayed
     */
    name?: string | undefined;
    status?: UpdateRunRequestStatus | undefined;
};

/** @internal */
export const UpdateRunRequestStatus$inboundSchema: z.ZodNativeEnum<typeof UpdateRunRequestStatus> =
    z.nativeEnum(UpdateRunRequestStatus);

/** @internal */
export const UpdateRunRequestStatus$outboundSchema: z.ZodNativeEnum<typeof UpdateRunRequestStatus> =
    UpdateRunRequestStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateRunRequestStatus$ {
    /** @deprecated use `UpdateRunRequestStatus$inboundSchema` instead. */
    export const inboundSchema = UpdateRunRequestStatus$inboundSchema;
    /** @deprecated use `UpdateRunRequestStatus$outboundSchema` instead. */
    export const outboundSchema = UpdateRunRequestStatus$outboundSchema;
}

/** @internal */
export const UpdateRunRequest$inboundSchema: z.ZodType<UpdateRunRequest, z.ZodTypeDef, unknown> = z
    .object({
        event_ids: z.array(z.string()).optional(),
        dataset_id: z.string().optional(),
        datapoint_ids: z.array(z.string()).optional(),
        configuration: z.record(z.any()).optional(),
        metadata: z.record(z.any()).optional(),
        name: z.string().optional(),
        status: UpdateRunRequestStatus$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            event_ids: "eventIds",
            dataset_id: "datasetId",
            datapoint_ids: "datapointIds",
        });
    });

/** @internal */
export type UpdateRunRequest$Outbound = {
    event_ids?: Array<string> | undefined;
    dataset_id?: string | undefined;
    datapoint_ids?: Array<string> | undefined;
    configuration?: { [k: string]: any } | undefined;
    metadata?: { [k: string]: any } | undefined;
    name?: string | undefined;
    status?: string | undefined;
};

/** @internal */
export const UpdateRunRequest$outboundSchema: z.ZodType<
    UpdateRunRequest$Outbound,
    z.ZodTypeDef,
    UpdateRunRequest
> = z
    .object({
        eventIds: z.array(z.string()).optional(),
        datasetId: z.string().optional(),
        datapointIds: z.array(z.string()).optional(),
        configuration: z.record(z.any()).optional(),
        metadata: z.record(z.any()).optional(),
        name: z.string().optional(),
        status: UpdateRunRequestStatus$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            eventIds: "event_ids",
            datasetId: "dataset_id",
            datapointIds: "datapoint_ids",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateRunRequest$ {
    /** @deprecated use `UpdateRunRequest$inboundSchema` instead. */
    export const inboundSchema = UpdateRunRequest$inboundSchema;
    /** @deprecated use `UpdateRunRequest$outboundSchema` instead. */
    export const outboundSchema = UpdateRunRequest$outboundSchema;
    /** @deprecated use `UpdateRunRequest$Outbound` instead. */
    export type Outbound = UpdateRunRequest$Outbound;
}
