/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The metadata to track for the generation
 */
export class Metadata extends SpeakeasyBase {}

/**
 * The request object for logging a generation
 */
export class GenerationLoggingQuery extends SpeakeasyBase {
    /**
     * The task for which the generation is being logged
     */
    @SpeakeasyMetadata()
    @Expose({ name: "task" })
    task?: string;

    /**
     * The version of the prompt
     */
    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;

    /**
     * The model that was used to generate the text
     */
    @SpeakeasyMetadata()
    @Expose({ name: "model" })
    model?: string;

    /**
     * The prompt used to generate the text
     */
    @SpeakeasyMetadata()
    @Expose({ name: "prompt" })
    prompt?: string;

    /**
     * The inputs filled into the prompt
     */
    @SpeakeasyMetadata()
    @Expose({ name: "inputs" })
    inputs?: Record<string, any>;

    /**
     * The text that was generated by the model provider
     */
    @SpeakeasyMetadata()
    @Expose({ name: "generation" })
    generation?: string;

    /**
     * The hyperparameters that were used to generate the text
     */
    @SpeakeasyMetadata()
    @Expose({ name: "hyperparameters" })
    hyperparameters?: Record<string, any>;

    /**
     * The token usage for the generation
     */
    @SpeakeasyMetadata()
    @Expose({ name: "usage" })
    usage?: Record<string, any>;

    /**
     * The source of the generation
     */
    @SpeakeasyMetadata()
    @Expose({ name: "source" })
    source?: string;

    /**
     * The latency of the generation in milliseconds
     */
    @SpeakeasyMetadata()
    @Expose({ name: "latency" })
    latency?: number;

    /**
     * The user properties to track for the generation
     */
    @SpeakeasyMetadata()
    @Expose({ name: "user_properties" })
    userProperties?: Record<string, any>;

    /**
     * The metadata to track for the generation
     */
    @SpeakeasyMetadata()
    @Expose({ name: "metadata" })
    @Type(() => Metadata)
    metadata?: Metadata;

    /**
     * The ground truth for the generation
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ground_truth" })
    groundTruth?: string;

    /**
     * The feedback associated with this generation
     */
    @SpeakeasyMetadata()
    @Expose({ name: "feedback" })
    feedback?: Record<string, any>;
}
