/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ParametersT extends SpeakeasyBase {}

export class UserProperties extends SpeakeasyBase {}

export class Configuration extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "_id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "project" })
    project: string;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "provider" })
    provider: string;

    @SpeakeasyMetadata()
    @Expose({ name: "parameters" })
    @Type(() => ParametersT)
    parameters?: ParametersT;

    @SpeakeasyMetadata()
    @Expose({ name: "user_properties" })
    @Type(() => UserProperties)
    userProperties?: UserProperties;
}
