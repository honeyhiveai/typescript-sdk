/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CreateModelEventBatchRequestBody = {
    modelEvents?: Array<components.CreateModelEvent> | undefined;
};

/**
 * Model events created
 */
export type CreateModelEventBatchResponseBody = {
    eventIds?: Array<string> | undefined;
    success?: boolean | undefined;
};

/** @internal */
export const CreateModelEventBatchRequestBody$inboundSchema: z.ZodType<
    CreateModelEventBatchRequestBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        model_events: z.array(components.CreateModelEvent$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            model_events: "modelEvents",
        });
    });

/** @internal */
export type CreateModelEventBatchRequestBody$Outbound = {
    model_events?: Array<components.CreateModelEvent$Outbound> | undefined;
};

/** @internal */
export const CreateModelEventBatchRequestBody$outboundSchema: z.ZodType<
    CreateModelEventBatchRequestBody$Outbound,
    z.ZodTypeDef,
    CreateModelEventBatchRequestBody
> = z
    .object({
        modelEvents: z.array(components.CreateModelEvent$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            modelEvents: "model_events",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateModelEventBatchRequestBody$ {
    /** @deprecated use `CreateModelEventBatchRequestBody$inboundSchema` instead. */
    export const inboundSchema = CreateModelEventBatchRequestBody$inboundSchema;
    /** @deprecated use `CreateModelEventBatchRequestBody$outboundSchema` instead. */
    export const outboundSchema = CreateModelEventBatchRequestBody$outboundSchema;
    /** @deprecated use `CreateModelEventBatchRequestBody$Outbound` instead. */
    export type Outbound = CreateModelEventBatchRequestBody$Outbound;
}

/** @internal */
export const CreateModelEventBatchResponseBody$inboundSchema: z.ZodType<
    CreateModelEventBatchResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        event_ids: z.array(z.string()).optional(),
        success: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            event_ids: "eventIds",
        });
    });

/** @internal */
export type CreateModelEventBatchResponseBody$Outbound = {
    event_ids?: Array<string> | undefined;
    success?: boolean | undefined;
};

/** @internal */
export const CreateModelEventBatchResponseBody$outboundSchema: z.ZodType<
    CreateModelEventBatchResponseBody$Outbound,
    z.ZodTypeDef,
    CreateModelEventBatchResponseBody
> = z
    .object({
        eventIds: z.array(z.string()).optional(),
        success: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            eventIds: "event_ids",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateModelEventBatchResponseBody$ {
    /** @deprecated use `CreateModelEventBatchResponseBody$inboundSchema` instead. */
    export const inboundSchema = CreateModelEventBatchResponseBody$inboundSchema;
    /** @deprecated use `CreateModelEventBatchResponseBody$outboundSchema` instead. */
    export const outboundSchema = CreateModelEventBatchResponseBody$outboundSchema;
    /** @deprecated use `CreateModelEventBatchResponseBody$Outbound` instead. */
    export type Outbound = CreateModelEventBatchResponseBody$Outbound;
}
