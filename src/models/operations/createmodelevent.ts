/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CreateModelEventRequestBody = {
    modelEvent?: components.CreateModelEvent | undefined;
};

/**
 * Model event created
 */
export type CreateModelEventResponseBody = {
    eventId?: string | undefined;
    success?: boolean | undefined;
};

/** @internal */
export const CreateModelEventRequestBody$inboundSchema: z.ZodType<
    CreateModelEventRequestBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        model_event: components.CreateModelEvent$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            model_event: "modelEvent",
        });
    });

/** @internal */
export type CreateModelEventRequestBody$Outbound = {
    model_event?: components.CreateModelEvent$Outbound | undefined;
};

/** @internal */
export const CreateModelEventRequestBody$outboundSchema: z.ZodType<
    CreateModelEventRequestBody$Outbound,
    z.ZodTypeDef,
    CreateModelEventRequestBody
> = z
    .object({
        modelEvent: components.CreateModelEvent$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            modelEvent: "model_event",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateModelEventRequestBody$ {
    /** @deprecated use `CreateModelEventRequestBody$inboundSchema` instead. */
    export const inboundSchema = CreateModelEventRequestBody$inboundSchema;
    /** @deprecated use `CreateModelEventRequestBody$outboundSchema` instead. */
    export const outboundSchema = CreateModelEventRequestBody$outboundSchema;
    /** @deprecated use `CreateModelEventRequestBody$Outbound` instead. */
    export type Outbound = CreateModelEventRequestBody$Outbound;
}

/** @internal */
export const CreateModelEventResponseBody$inboundSchema: z.ZodType<
    CreateModelEventResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        event_id: z.string().optional(),
        success: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            event_id: "eventId",
        });
    });

/** @internal */
export type CreateModelEventResponseBody$Outbound = {
    event_id?: string | undefined;
    success?: boolean | undefined;
};

/** @internal */
export const CreateModelEventResponseBody$outboundSchema: z.ZodType<
    CreateModelEventResponseBody$Outbound,
    z.ZodTypeDef,
    CreateModelEventResponseBody
> = z
    .object({
        eventId: z.string().optional(),
        success: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            eventId: "event_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateModelEventResponseBody$ {
    /** @deprecated use `CreateModelEventResponseBody$inboundSchema` instead. */
    export const inboundSchema = CreateModelEventResponseBody$inboundSchema;
    /** @deprecated use `CreateModelEventResponseBody$outboundSchema` instead. */
    export const outboundSchema = CreateModelEventResponseBody$outboundSchema;
    /** @deprecated use `CreateModelEventResponseBody$Outbound` instead. */
    export type Outbound = CreateModelEventResponseBody$Outbound;
}
