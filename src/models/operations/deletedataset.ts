/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type DeleteDatasetRequest = {
    /**
     * The unique identifier of the dataset to be deleted like `663876ec4611c47f4970f0c3`
     */
    datasetId: string;
};

/** @internal */
export const DeleteDatasetRequest$inboundSchema: z.ZodType<
    DeleteDatasetRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        dataset_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            dataset_id: "datasetId",
        });
    });

/** @internal */
export type DeleteDatasetRequest$Outbound = {
    dataset_id: string;
};

/** @internal */
export const DeleteDatasetRequest$outboundSchema: z.ZodType<
    DeleteDatasetRequest$Outbound,
    z.ZodTypeDef,
    DeleteDatasetRequest
> = z
    .object({
        datasetId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            datasetId: "dataset_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteDatasetRequest$ {
    /** @deprecated use `DeleteDatasetRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteDatasetRequest$inboundSchema;
    /** @deprecated use `DeleteDatasetRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteDatasetRequest$outboundSchema;
    /** @deprecated use `DeleteDatasetRequest$Outbound` instead. */
    export type Outbound = DeleteDatasetRequest$Outbound;
}
