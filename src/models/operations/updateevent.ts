/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class UpdateEventRequestBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "event_id" })
    eventId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "feedback" })
    feedback?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "metadata" })
    metadata?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "metrics" })
    metrics?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "outputs" })
    outputs?: Record<string, any>;
}

export class UpdateEventResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;
}
