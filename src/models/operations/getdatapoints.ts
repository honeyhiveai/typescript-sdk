/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../../models/components";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetDatapointsRequest extends SpeakeasyBase {
    /**
     * Project ID to filter datapoints
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=project" })
    project: string;
}

/**
 * Successful response
 */
export class GetDatapointsResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: components.Datapoint })
    @Expose({ name: "datapoints" })
    @Type(() => components.Datapoint)
    datapoints?: components.Datapoint[];
}

export class GetDatapointsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Successful response
     */
    @SpeakeasyMetadata()
    object?: GetDatapointsResponseBody;
}
