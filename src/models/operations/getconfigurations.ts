/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../../models/components";
import { AxiosResponse } from "axios";

/**
 * Environment - "dev", "staging" or "prod"
 */
export enum Env {
    Dev = "dev",
    Staging = "staging",
    Prod = "prod",
}

export class GetConfigurationsRequest extends SpeakeasyBase {
    /**
     * Project name for configuration like `Example Project`
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=project" })
    project: string;

    /**
     * Environment - "dev", "staging" or "prod"
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=env" })
    env?: Env;

    /**
     * The name of the configuration like `v0`
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
    name?: string;
}

export class GetConfigurationsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * An array of configurations
     */
    @SpeakeasyMetadata({ elemType: components.Configuration })
    configurations?: components.Configuration[];
}
