/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../../models/components";
import { AxiosResponse } from "axios";

/**
 * Configuration type - "LLM" or "pipeline"
 */
export enum TypeT {
    Llm = "LLM",
    Pipeline = "pipeline",
}

export class GetConfigurationsRequest extends SpeakeasyBase {
    /**
     * Project name for configuration
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=project_name" })
    projectName: string;

    /**
     * Configuration type - "LLM" or "pipeline"
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
    type: TypeT;
}

export class GetConfigurationsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * An array of configurations
     */
    @SpeakeasyMetadata({ elemType: components.Configuration })
    configurations?: components.Configuration[];
}
