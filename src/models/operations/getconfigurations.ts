/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Environment - "dev", "staging" or "prod"
 */
export const Env = {
  Dev: "dev",
  Staging: "staging",
  Prod: "prod",
} as const;
/**
 * Environment - "dev", "staging" or "prod"
 */
export type Env = ClosedEnum<typeof Env>;

export type GetConfigurationsRequest = {
  /**
   * Project name for configuration like `Example Project`
   */
  project: string;
  /**
   * Environment - "dev", "staging" or "prod"
   */
  env?: Env | undefined;
  /**
   * The name of the configuration like `v0`
   */
  name?: string | undefined;
};

/** @internal */
export const Env$inboundSchema: z.ZodNativeEnum<typeof Env> = z.nativeEnum(Env);

/** @internal */
export const Env$outboundSchema: z.ZodNativeEnum<typeof Env> =
  Env$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Env$ {
  /** @deprecated use `Env$inboundSchema` instead. */
  export const inboundSchema = Env$inboundSchema;
  /** @deprecated use `Env$outboundSchema` instead. */
  export const outboundSchema = Env$outboundSchema;
}

/** @internal */
export const GetConfigurationsRequest$inboundSchema: z.ZodType<
  GetConfigurationsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  project: z.string(),
  env: Env$inboundSchema.optional(),
  name: z.string().optional(),
});

/** @internal */
export type GetConfigurationsRequest$Outbound = {
  project: string;
  env?: string | undefined;
  name?: string | undefined;
};

/** @internal */
export const GetConfigurationsRequest$outboundSchema: z.ZodType<
  GetConfigurationsRequest$Outbound,
  z.ZodTypeDef,
  GetConfigurationsRequest
> = z.object({
  project: z.string(),
  env: Env$outboundSchema.optional(),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationsRequest$ {
  /** @deprecated use `GetConfigurationsRequest$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationsRequest$inboundSchema;
  /** @deprecated use `GetConfigurationsRequest$outboundSchema` instead. */
  export const outboundSchema = GetConfigurationsRequest$outboundSchema;
  /** @deprecated use `GetConfigurationsRequest$Outbound` instead. */
  export type Outbound = GetConfigurationsRequest$Outbound;
}
