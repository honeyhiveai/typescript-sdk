/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../../models/components";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetTestcasesRequest extends SpeakeasyBase {
    /**
     * Project ID
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=project" })
    project: string;

    /**
     * Type of the testcase
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
    type?: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=testcase_id" })
    testcaseId?: string;
}

/**
 * Successful response
 */
export class GetTestcasesResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: components.Testcase })
    @Expose({ name: "testcases" })
    @Type(() => components.Testcase)
    testcases?: components.Testcase[];
}

export class GetTestcasesResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Successful response
     */
    @SpeakeasyMetadata()
    object?: GetTestcasesResponseBody;
}
