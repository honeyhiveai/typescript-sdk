/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type CreateEventRequestBody = {
  event?: components.CreateEventRequest | undefined;
};

/**
 * Event created
 */
export type CreateEventResponseBody = {
  eventId?: string | undefined;
  success?: boolean | undefined;
};

/** @internal */
export const CreateEventRequestBody$inboundSchema: z.ZodType<
  CreateEventRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  event: components.CreateEventRequest$inboundSchema.optional(),
});

/** @internal */
export type CreateEventRequestBody$Outbound = {
  event?: components.CreateEventRequest$Outbound | undefined;
};

/** @internal */
export const CreateEventRequestBody$outboundSchema: z.ZodType<
  CreateEventRequestBody$Outbound,
  z.ZodTypeDef,
  CreateEventRequestBody
> = z.object({
  event: components.CreateEventRequest$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEventRequestBody$ {
  /** @deprecated use `CreateEventRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateEventRequestBody$inboundSchema;
  /** @deprecated use `CreateEventRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreateEventRequestBody$outboundSchema;
  /** @deprecated use `CreateEventRequestBody$Outbound` instead. */
  export type Outbound = CreateEventRequestBody$Outbound;
}

/** @internal */
export const CreateEventResponseBody$inboundSchema: z.ZodType<
  CreateEventResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  event_id: z.string().optional(),
  success: z.boolean().optional(),
}).transform((v) => {
  return remap$(v, {
    "event_id": "eventId",
  });
});

/** @internal */
export type CreateEventResponseBody$Outbound = {
  event_id?: string | undefined;
  success?: boolean | undefined;
};

/** @internal */
export const CreateEventResponseBody$outboundSchema: z.ZodType<
  CreateEventResponseBody$Outbound,
  z.ZodTypeDef,
  CreateEventResponseBody
> = z.object({
  eventId: z.string().optional(),
  success: z.boolean().optional(),
}).transform((v) => {
  return remap$(v, {
    eventId: "event_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEventResponseBody$ {
  /** @deprecated use `CreateEventResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateEventResponseBody$inboundSchema;
  /** @deprecated use `CreateEventResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateEventResponseBody$outboundSchema;
  /** @deprecated use `CreateEventResponseBody$Outbound` instead. */
  export type Outbound = CreateEventResponseBody$Outbound;
}
